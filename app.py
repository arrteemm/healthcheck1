# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10_p0r_M1i7CNNp8FXgFpGDBiiktJakHz
"""

pip install requests pandas python-docx reportlab openpyxl flask

from flask import Flask, request, redirect, url_for, session
import requests
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
import os

from flask import Flask, request, redirect, url_for, session
import requests
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
import os

app = Flask(__name__)
app.secret_key = '9300942cc5a443e2a9a561baf073966b'

# Укажите здесь ваши данные
CLIENT_ID = 'e0383a07fdb146e68419c00b55839eb8'
CLIENT_SECRET = '9300942cc5a443e2a9a561baf073966b'
REDIRECT_URI = 'https://disk.yandex.ru/client/disk/Опрос'
OAUTH_URL = 'https://oauth.yandex.ru/authorize'
TOKEN_URL = 'https://oauth.yandex.ru/token'

# URL для загрузки файла
UPLOAD_URL = 'https://cloud-api.yandex.net/v1/disk/resources/upload'


@app.route('/')
def index():
    return '''
    <form id="surveyForm" action="/submit" method="post">
        <label>Введите вашу фамилию:</label>
        <input type="text" name="surname" required></input><br>

        <label>Уровень усталости:</label>
        <input type="radio" name="fatigue" value="1">Низкий</input>
        <input type="radio" name="fatigue" value="2">Средний</input>
        <input type="radio" name="fatigue" value="3">Высокий</input>
        <!-- Добавьте остальные вопросы аналогично -->

        <button type="submit">Отправить</button>
    </form>
    <div id="result"></div>
    '''


@app.route('/submit', methods=['POST'])
def submit():
    score = 0
    surname = request.form.get('surname')  # Получаем фамилию
    questions = ['fatigue']  # Используйте все ваши вопросы

    # Подсчет значений
    for question in questions:
        answer = request.form.get(question)
        if answer:
            score += int(answer)

    message = 'Нет явных признаков, чтобы обратиться к врачу.' if score < 18 else 'Вам следует обратиться к врачу. Возможные проблемы со здоровьем.'

    # Генерация PDF с фамилией
    file_path = f'{surname}.pdf'  # Имя файла соответствует фамилии
    generate_pdf(file_path, message)

    # Перенаправление на OAuth авторизацию
    return redirect(f"{OAUTH_URL}?response_type=code&client_id={CLIENT_ID}&redirect_uri={REDIRECT_URI}")


@app.route('/oauth_callback')
def oauth_callback():
    code = request.args.get('code')

    # Получение токена
    response = requests.post(TOKEN_URL, data={
        'grant_type': 'authorization_code',
        'code': code,
        'client_id': CLIENT_ID,
        'client_secret': CLIENT_SECRET,
        'redirect_uri': REDIRECT_URI
    })

    token = response.json().get('access_token')

    # Получаем фамилию из сессии, чтобы использовать для загрузки
    surname = request.args.get('surname')

    # Загрузка PDF на Яндекс Диск
    upload_to_yandex_disk(token, f'{surname}.pdf')

    return 'Результаты успешно загружены на Яндекс Диск!'


def generate_pdf(file_path, message):
    c = canvas.Canvas(file_path, pagesize=letter)
    c.drawString(100, 750, f'Результат: {message}')
    c.save()


def upload_to_yandex_disk(token, file_name):
    url = f'{UPLOAD_URL}?path={file_name}&overwrite=true'
    response = requests.get(url, headers={'Authorization': f'OAuth {token}'})
    upload_url = response.json().get('href')

    with open(file_name, 'rb') as f:
        requests.put(upload_url, files={'file': f})


if __name__ == '__main__':
    app.run(debug=True)
